---
apiVersion: batch/v1
kind: Job
metadata:
  name: teslamate-postgres-backup
  namespace: database
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: pg-backup
          image: postgres:14
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: teslamate-postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: restore-volume
              mountPath: /restore
          command:
            - bash
            - -c
            - |
              set -e

              echo "=== PostgreSQL Backup to NFS Started ==="
              echo "Backup started at: $(date)"

              # Set connection details
              export PGHOST="teslamate-postgres.database.svc.cluster.local"
              export PGPORT="5432"
              export PGUSER="teslamate"
              export PGDATABASE="teslamate"

              # Wait for PostgreSQL to be ready
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h $PGHOST -p $PGPORT -U $PGUSER; do
                echo "PostgreSQL not ready, waiting..."
                sleep 2
              done

              echo "PostgreSQL is ready. Starting backup..."

              # Create timestamped backup filename
              BACKUP_FILE="/restore/teslamate_pg14_backup_$(date +%Y%m%d_%H%M%S).sql"

              # Create full database dump
              echo "Creating database dump: $BACKUP_FILE"
              pg_dump -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE \
                --verbose \
                --no-password \
                --format=plain \
                --no-owner \
                --no-privileges \
                --create \
                --clean \
                --if-exists > "$BACKUP_FILE"

              # Verify backup file was created and has content
              if [ -f "$BACKUP_FILE" ] && [ -s "$BACKUP_FILE" ]; then
                BACKUP_SIZE=$(ls -lh "$BACKUP_FILE" | awk '{print $5}')
                echo "=== BACKUP SUCCESSFUL ==="
                echo "Backup file: $BACKUP_FILE"
                echo "Backup size: $BACKUP_SIZE"
                echo "Backup completed at: $(date)"

                # Show first few lines of backup for verification
                echo ""
                echo "=== First 10 lines of backup file ==="
                head -10 "$BACKUP_FILE"
                echo ""
                echo "=== Last 10 lines of backup file ==="
                tail -10 "$BACKUP_FILE"
              else
                echo "=== BACKUP FAILED ==="
                echo "Backup file is missing or empty"
                exit 1
              fi
      volumes:
        - name: restore-volume
          nfs:
            server: 192.168.10.3
            path: /volume1/cluster/db-restore